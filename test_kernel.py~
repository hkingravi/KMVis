# this script just tests the KernelType function to see 
# whether the initializations are working
import numpy as np
import matplotlib as mp
from matplotlib import rc
import matplotlib.pyplot as plt
from scipy.io import loadmat, savemat
from mpl_toolkits.mplot3d import Axes3D

from kernel import *
from KernelType import *

k_name1   = "gaussian"
k_name2   = "sigmoid"
k_name3   = "polynomial"
k_name4   = "wrongname"
k_params1 = np.array( [1.2] )
k_params2 = np.array( [0.5, 1.2] )
k_params3 = np.array( [2, 0] )

k1 = KernelType(k_name1,k_params1)
k2 = KernelType(k_name2,k_params2)
k3 = KernelType(k_name3,k_params3)
k4 = KernelType(k_name4,k_params3)


# check names etc

print "Kernel 1:"
print "Name: "  + k1.name
print "Parms: " 
print  k1.params

print "\nKernel 2:"
print "Name: "  + k2.name
print "Parms: " 
print  k2.params

print "\nKernel 3:"
print "Name: "  + k3.name
print "Parms: " 
print  k3.params

print '\n\n'

# now initialize some vectors and compute kernel matrices between them
# 1D data
x1 = np.array([[1, 2, 3]])
y1 = np.array([[2, 1]])

K1_1D = kernel(x1,y1,k1)
K2_1D = kernel(x1,y1,k2)
#K3 = kernel(x,y,k3)

# 2D data
x2 = np.array([[1, 2, 3],[3, 4, 5]])
y2 = np.array([[2, 1],[1, 0]])

K1_2D = kernel(x2,y2,k1)
K2_2D = kernel(x2,y2,k2)
#K3 = kernel(x,y,k3)



print "\n1D Data:"
print "X:"
print x1
print "Y:"
print y1

print "\nKernel Matrix (Gaussian):"
print K1_1D
print "Kernel Matrix (Sigmoid):"
print K2_1D

print "\n2D Data:"
print "X:"
print x2
print "Y:"
print y2

print "\nKernel Matrix (Gaussian):"
print K1_2D
print "Kernel Matrix (Sigmoid):"
print K2_2D

# now, generate plots for kernels 
x = np.arange(-5,5,0.1)
y = np.array([2]) # y vals

k_gauss = kernel(x,y,k1)
k_sigm = kernel(x,y,k2)
k_poly = kernel(x,y,k3)

# plot Gaussian kernel values

# turns on Tex
rc('text', usetex=True)
rc('font', family='serif')

fig = plt.figure()
ax = fig.gca()
ax.plot(x,k_gauss,'b')
ax.set_title(r"Gaussian kernel with $\sigma = 1.2$",fontsize=20)

fig2 = plt.figure()
ax2 = fig2.gca()
ax2.plot(x,k_sigm,'b')
ax2.set_title(r"Sigmoid kernel with $\alpha = 0.5, c = 1.2$",fontsize=20)

fig3 = plt.figure()
ax3 = fig3.gca()
ax3.plot(x,k_poly,'b')
ax3.set_title(r"Polynomial kernel with $\gamma = 2, c = 0$",fontsize=20)


plt.draw()
plt.show()




